from .. import loader, utils
from asyncio import sleep
import random

class SpiderMod(loader.Module):
	strings = {"name": "SpiderModule"}
	
	async def client_ready (self, client, db) -> None:
		self.db = db
		self.client = client
	async def spidercmd (self, message):
		"""🩸 Ⲡⲣυⲙⲉⲣ ⲃⲃⲟⲇⲁ: 〔🕷️ Ⳅⲁⲇⲉⲣⲯⲕⲁ ⲃ ⲥⲉⲕⲩⲏⲇⲁⲭ 🕷️〕 + 〔🕷️ Ⲗюⳝⲟύ ⲧⲉⲕⲥⲧ 🕷️〕"""
		args = utils.get_args(message)
		if not args:
			self.db.set(self.strings["name"], "state", False)
			await utils.answer(message, "<b>𐌿ᥲуκᥙ ᤋᥲκ᧐нчᥙ᧘ᥙ ᥙᥴᴛρᥱδ᧘яᴛь ᴛᥱδя.🕷️🩸</b>",
			)
			return
		await utils.answer(message,
"𐌺᧐ρ᧐᧘ь W᥊ᥣᥣ᧐᥎ ⲡⲣυⳅⲃⲁⲗ ⲡⲁⲩⲕⲟⲃ, ⳡⲧⲟⳝы υⲥⲧⲣⲉⳝυⲧь ⲧⲉⳝя 🕷️🩸\n\n"
		"<b>Ⳡⲧⲟⳝы ⲟⲥⲧⲁⲏⲟⲃυⲧь υⲥⲧⲣⲉⳝⲗⲉⲏυⲉ ⲱⲗюⲭυ, ⲡυⲱυ</b> <code>.spider</code>",
		)
		try:
			time = float(args[0])
		except ValueError:
			return
		text = " ".join(utils.get_args_raw(message).split()[1:])
		shabl = [
		"🕷️🩸૯ઠƴ ੮ɞ૦ю ⲙɑ੮ь η૦ ઠƿυ੮ɑⲏςκυ",
		"🕷️🩸Ⲧы ⲡⲟⲏυⲙⲁⲉⲱь, ⳡⲧⲟ ⲙⲟύ ⲡⲁⲩⲕ ⲡⲩⲥⲕⲁⲉⲧ яⲇ ⲃ ⲧⲃⲟю ⲙⲁⲧь?",
		"🕷️🩸Ⲧⲃⲟя ⲙⲁⲧь ⲥⲟⲥёⲧ ⲙⲟⲉⲙⲩ ⲡⲁⲩⲕⲩ, ⳡⲧⲟⳝы ⲟⲏ ⲉё ⲏⲉ ⲩⳝυⲃⲁⲗ ⲥⲃⲟυⲙ яⲇⲟⲙ",
		"🕷️🩸Ⲃⲉⲣⲧυⲕⲁⲗьⲏⲟ ⲥⲟⲥⲉⲱь ⲙⲏⲉ",
		"🕷️🩸Ⲕⲟⲣⲟⲗⲉⲃⲁ ⲡⲁⲩⲕⲟⲃ ⲡⲣυⳅⲃⲁⲗⲁ ⲇⲉⲧⲉύ ⲡⲁⲩⲕⲟⲃ υ ⲟⲏυ υⲇⲩⲧ ⲧⲉⳝя ⲉⳝⲁⲧь",
		"🕷️🩸Ⲧⲃⲟя ⲙⲁⲧь ⲃⲕⲟⲗⲟⲗⲁ ⲥⲉⳝⲉ ⲏυⲕⲟⲧυⲏ, υ ⳃⲁⲥ ⲭⲟⲇυⲧ ⲥⲟⲥёⲧ ⲃⲥⲉⲙ",
		"🕷️🩸Ⳡⲧⲟⳝы ⲥⲟⲅⲣⲉⲧьⲥя ⳅυⲙⲟύ, я ⳅⲁⲥⲩⲏⲩⲗ ⲥⲃⲟύ ⳡⲗⲉⲏ ⲃ ⲧⲃⲟю ⲙⲁⲧь",
		"🕷️🩸Ⲡⲟⳝⲗяⲇь ⲧы ⲉⳝⲁⲏⲁя",
		"🕷️🩸Ⲕⲩⲇⲁ ⲧы ⲡⲟⲧⲩⲭⲁⲉⲱь ⲇⲉⲃⲟⳡⲕⲁ?",
		"🕷️🩸Я ⲏⲉ ⲣⲁⳅⲣⲉⲱⲁⲗ ⲧⲉⳝⲉ ⲃⲥⲧⲁⲃⲁⲧь ⲥ ⲕⲟⲗⲉⲏ",
		"🕷️🩸Ⲇⲁⲃⲁύ ⲏⲉ ⲡυⳅⲇυ ⲙⲏⲉ ⲧⲩⲧ ⲁ ⲥⲟⲥυ ⲣⲉⳃⲉ",
		"🕷️🩸Ⲱⲗюⲭⲟⳅⲁ я ⲧⲃⲟю ⲙⲁⲧь ⲧⲁⲡⲕⲟⲙ ⲃыⲉⳝⲁⲗ",
		"🕷️🩸Ⲩ ⲧⲃⲟⲉύ ⲙⲁⲧⲉⲣυ ⲥⲗⲉⲧⲁⲉⲧ ⲕⲣыⲱⲁ, ⲕⲟⲅⲇⲁ ⲃυⲇυⲧ ⲟⲅⲣⲟⲙⲏыύ ⳝυⲅ ⲇυⲕ ⲙⲟⲉⲅⲟ ⲡⲁⲩⳡⲕⲁ",
		"🕷️🩸Ⲏⲁяⲣυⲃⲁύ ⲙⲏⲉ ⳅⲁⲗⲩⲡⲩ ⲱⲗюⲭⲁ",
		"🕷️🩸Ⲡⲟⲕⲁ я ⲉⳝⲩ ⲧⲃⲟю ⲙⲁⲧь, ⲧы ⲥⲧⲟυⲱь ⲏⲁ ⲕⲟⲗⲉⲏяⲭ υ ⲗυⲯⲉⲱь яύцⲁ",
		"🕷️🩸Ⲇⲁⲃⲁύ ⲡⲣыⲅⲁύ, ⲗⲟⲃⲗю ⲧⲉⳝя ⲭⲩⲉⲙ ⲅⲏυⲇⲁ",
		"🕷️🩸Ⲧυⲱⲉ ⲇⲩⲣⲁ, я ⲧⲉⳝя ⲃⲥⲉⲅⲟ ⲗυⲱь ⲉⳝⲁⲱⲩ ⲟⲥⲧⲣыⲙ ⲭⲩёⲙ ⲡⲁⲩⲕⲁ",
		"🕷️🩸Ⲧы ⲡⲟⲏυⲙⲁⲉⲱь ⳡⲧⲟ я ⲡⲟⲥⲁⲇυⲗ ⲧⲃⲟю ⲙⲁⲧь ⲏⲁ ⲕⲟⲗ υ ⲡⲁⲩⲕυ ⲉё ⲡⲣυⲏяⲗυ ⲕⲁⲕ ⳅⲁ ⲇⲟⳝыⳡⲩ",
		"🕷️🩸Ⲏⲉ ⲡⲟⲧⲩⲭⲁύ ⲧⲉⲗⲟⳡⲕⲁ",
		"🕷️🩸Ⲣⲉⲯⲩ ⲧⲃⲟю ⲙⲁⲧь ⲥⲃυⲏⲟⲣⲩⲥⲥⲕⲩю",
		"🕷️🩸Ⲏⲁⲧяⲅυⲃⲁю ⲧⲃⲟύ ⲣⲟⲧυⲕ ⲕⲁⲕ ⳅυⲙⲏюю ⲣⲉⳅυⲏⲩ",
		"🕷️🩸Ⲧы ⲡⲟⲏυⲙⲁⲉⲱь ⳡⲧⲟ ⲧⲃⲟя ⲙⲁⲧь ⲙⲏⲉ ⲥⲟⲥⲉⲧ?",
		"🕷️🩸Ⲧы ⲡⲟⲏяⲗ ⲡⲣυⲕⲟⲗ ⲥ ⲏⲁⲉⳝⲟⲙ ⲧⲃⲟⲉⲅⲟ ⲟⲧцⲁ, ⲕⲟⲅⲇⲁ ⲟⲏ ⲙⲏⲉ ⲥⲟⲥⲁⲗ, ⲁ ⲡⲟⲗⲩⳡυⲗ ⲧⲟⲗьⲕⲟ ⲭⲩⲉⲙ ⲡⲟ ⲉⳝⲁⲗⲩ",
		"🕷️🩸Ⲁⲭⲩⲉⲏⲏⲟ ⲯⲉ ⲉⳝⲁⲧь ⲧⲉⳝя ⲃ ⲁⲏⲩⲥ",
		"🕷️🩸Ⳙⲇυ ⲡⲟⲙⲟύ ⲥⲃⲟύ ⲣⲟⲧⲁⲏ ⲡⲟⲥⲗⲉ ⲃⲡⲣыⲥⲕⲁ яⲇⲁ, я ⲉⳃё ⲏⲉ ⳅⲁⲕⲟⲏⳡυⲗ ⲧⲉⳝя ⲉⳝⲁⲧь",
		"🕷️🩸Ⲟⲣⲇⲁ ⲡⲁⲩⲕⲟⲃ υ ⲥⲁⲙⲁ ⲕⲟⲣⲟⲗⲉⲃⲁ υⲇёⲧ ⲉⳝⲁⲧь ⲧⲃⲟю ⲙⲁⲧь",
		"🕷️🩸Ⲧы ⲡⲟⲏυⲙⲁⲉⲱь ⳡⲧⲟ я ⲥⲃяⳅⲁⲗ ⲧⲃⲟю ⲙⲁⲧь цⲉⲡяⲙυ υ ⲉⳝⲩ ⲉё",
		"🕷️🩸Ⲡⲣⲟⲇⲁⲗ ⲧⲃⲟю ⲥⲉⲙью ⳝⲟⲙⲯⲁⲙ ⳅⲁ ⳝⲉⲥⲡⲗⲁⲧⲏⲟ, ⳡⲧⲟⳝы ⲟⲏυ ⲃыⲉⳝⲁⲗυ υ ⲕⲟⲏⳡυⲗυ ⲃ ⲧⲉⳝя",
		"🕷️🩸Ⲧы ⲡⲟⲏυⲙⲁⲉⲱь ⳡⲧⲟ ⲡⲁⲩⲕυ ⲇⲉⲗⲁюⲧ ⲣυⲧⲩⲁⲗ 9-υ ⲕⲟⲗⲉц ⲁⲇⲁ ⳡⲧⲟⳝы ⲧⲃⲟя ⲙⲁⲧь ⲥⲇⲟⲭⲗⲁ",
		"🕷️🩸Ⲣⲉⲯⲩ ⲧⲃⲟю ⲙⲁⲧь ⲙⲉⳡⲟⲙ ⲡⲁⲩⲕⲁ",
		"🕷️🩸Ⲥⲟⲥυ ⲙⲏⲉ ⲇⲩⲣⲟⳡⲕⲁ",
		"🕷️🩸 Ⲏⲁⲥυⲗьⲏⲟ ⲧя ⲡⲟⲥⲧⲁⲃυⲗ ⲣⲁⲕⲟⲙ",
		"🕷️🩸Ⳙⲥⲧⲣⲉⳝⲗяю ⲧⲃⲟύ ⲁⲏⲁⲗ ⲙⲉⳡⲟⲙ ⲡⲁⲩⲕⲁ",
		"🕷️🩸Ⲧы ⲡⲟⲏυⲙⲁⲉⲱь ⳡⲧⲟ ⲧⲃⲟя ⲙⲁⲧь ⳅⲁⲭⲟⲧⲉⲗⲁ ⲥ ⲙⲟυⲙ ⲡⲁⲩⲕⲟⲙ 69?",
		"🕷️🩸Ⲕⲟⲅⲇⲁ ⲡⲁⲩⲕ ⲕⲟⲏⳡυⲗ ⲃ ⲧⲃⲟю ⲙⲁⲧь, ⲟⲏⲁ ⲣⲁⲥⲥⲕⲁⳅⲁⲗⲁ ⲃⲥⲉⲙⲩ ⲅⲟⲣⲟⲇⲩ, ⲕⲁⲕⲁя ⲃⲕⲩⲥⲏⲁя ⲩ ⲏⲉⲅⲟ ⲥⲡⲉⲣⲙⲁ",
		"🕷️🩸Ⲧⲃⲟя ⲙⲁⲧь ⲩⲯⲉ ⲡⲣⲉⲇⲗⲁⲅⲁⲉⲧ ⲙⲟⲉⲙⲩ ⲡⲁⲩⲕⲩ 100000$ ⳡⲧⲟⳝы ⲟⲏ ⲉё ⲏⲉ ⲩⳝυⲃⲁⲗ",
		"🕷️🩸Ⲕⲩⲡυⲗ я ⲣⲉⳅυⲏⲟⲃыύ ⲭⲩύ ⲥ ⲙⲉⳡⲁⲙυ ⲡⲁⲩⲕⲟⲃ ⲏⲁ ⳡⲗⲉⲏⲉ, ⳃⲁⲥ ⲧⲃⲟя ⲙⲁⲧь ⲥⲁⲇυⲧьⲥя υ ⲡⲗⲁⳡⲉⲧ ⲥ ⲕⲣⲟⲃью",
		"🕷️🩸Ⲙⲟύ ⲡⲁⲩⳡⲟⲕ ⲡⲟⲇⲕⲣⲁⲗⲥя ⲕ ⲧⲉⳝⲉ ⲥⳅⲁⲇυ υ ⲃⲃⲟⲱⲉⲗ ⲃ ⲧⲃⲟё ⲧⲉⲗⲟ",
		"🕷️🩸Ⲃ ⲧⲉⲗⲉ ⲧⲃⲟⲉύ ⲱⲗюⲭⲟⲙⲁⲧⲉⲣυ ⲥⲟⲥⲩ ⳝⲟⲙⲯⲁⲙ",
		"🕷️🩸Ⲧы ⲡⲟⲏυⲙⲁⲉⲱь, ⳡⲧⲟ ⲙⲟυ ⲡⲁⲩⲕυ ⲣⲁⳅⲣⲉⳅⲁⲗυ ⲯυⲃⲟⲧ ⲙⲁⲧⲉⲣυ υ я ⳅⲁⲗⲉⳅ ⲃ ⲧⲉⲗⲟ ⲧⲃⲟⲉύ ⲱⲗюⲭυ υ ⲏⲁⳡⲁⲗ ⲥⲟⲥⲁⲧь ⲃⲥⲉⲙ",
		"🕷️🩸Ⲉⳝⲁⲱⲩ ⲭⲩⲉⲙ ⲧⲃⲟю ⲙⲁⲧь",
		"🕷️🩸Ⲇⲉⲣⲯⲩ ⲅⲟⲗⲟⲃⲩ ⲧⲃⲟⲉύ ⲙⲁⲧⲉⲣυ, ⳡⲧⲟⳝы ⲏⲉ ⳝⲣыⲕⲁⲗⲁⲥь",
		"🕷️🩸Ⲩⳡυⲥь ⲩ ⲥⲃⲟⲉύ ⲱⲗюⲭⲟⲙⲁⲧⲉⲣυ, ⲕⲁⲕ ⲏⲁⲇⲟ ⲩⲙⲟⲗяⲧь ⲟⲧⲥⲟⲥⲟⲙ, ⳡⲧⲟⳝы ⲧⲉⳝя ⲏⲉ ⲩⳝυⲃⲁⲗυ?",
		"🕷️🩸Ⲣⲁⲥⲧяⲏⲩⲗ ⲧⲃⲟю ⲙⲁⲧь ⲏⲁ 4 ⲇⲉⲣⲉⲃⲁ υ ⲡⲟⲥⲧⲁⲃυⲗ ⲥⲏυⳅⲩ ⲕⲟⲥⲧёⲣ",
		"🕷️🩸Ⲙυⲗⲗυⲟⲏⲁⲙυ υⲅⲗ я ⲡυⲭⲁⲗ ⲧⲃⲟю ⲙⲁⲧь",
		"🕷️🩸 Ⳡⲧⲟ-ⲧⲟ я ⳡⲁⲥⲧⲟ ⲉⳝⲩ ⲧⲃⲟю ⲙⲁⲧь ⲃ ⲇⲉⲥⲏⲁ)",
		"🕷️🩸Ⲧⲃⲟя ⲙⲁⲧь ⳅⲁⲭⲟⲧⲉⲗⲁ ⲉⳃё ⳝⲟⲗьⲱⲉ ⲥⲡⲉⲣⲙы ⲡⲁⲩⲕⲁ, ⲡⲟⲧⲟⲙⲩ ⳡⲧⲟ ⲟⲏⲁ ⲥⲕⲁⳅⲁⲗⲁ, ⳡⲧⲟ ⲩ ⲏⲉⲅⲟ ⲃⲕⲩⲥ ⲥⲡⲉⲣⲙы ⲕⲁⲕ ⲙⲟⲗⲟⲏыύ ⲕⲟⲕⲧⲉύⲗь ⲥ ⳝⲁⲏⲁⲏⲟⲃ",
		"🕷️🩸Ⳝⲣⲁⳅυⲗьⲥⲕυ ⲧя ⲉⳝⲩ",
		"🕷️🩸Ⲥⲁⲙⲩⲣⲁυ υ ⲡⲁⲩⲕυ ⲇⲟⲅⲟⲃⲟⲣυⲗυⲥь ⲧⲉⳝя ⲃыⲉⳝⲁⲧь",
		"🕷️🩸Ⲃⲟ ⲥⲗⲁⲃⲩ Ⲩⲕⲣⲁυⲏы ⲡⲁⲩⲕυ ⲡⲟⲱⲗυ ⲩⳝυⲃⲁⲧь ⲧⲃⲟю ⲣⲩⲥⲏяⲃⲩю ⲥⲧⲣⲁⲏⲩ",
		"🕷️🩸Ⲧы ⲡⲟⲏυⲙⲁⲉⲱь ⳡⲧⲟ ⲡⲁⲩⲕυ ⲃⲡⲣыⲥⲕⲁюⲧ яⲇ ⲃ ⲣⲩⲥⲏяⲃыⲭ ⲭⲩⲉⲥⲟⲥⲟⲃ",
		"🕷️🩸Ⲏⲁ ⳡⲗⲉⲏ ⲡⲣыⲅⲁύ",
		"🕷️🩸Ⲗⲟⲃⲗю ⲧⲉⳝя ⳝυⲅ ⲇυⲕⲟⲙ",
		"🕷️🩸Ⲏⲩ ⲃⲟⳅьⲙυ ⲙⲟύ ⳡⲗⲉⲏ ⲃ ⲣⲩⲕυ υ ⳅⲁⲡⲟύ",
		"🕷️🩸Ⲧⲃⲟⲉύ ⲙⲁⲧⲉⲣυ ⳅⲁⲥⲩⲏⲩⲗ ⲣⲁⲥⲡяⲧυⲉ, ⲁ ⳡⲧⲟⳝы ⲏⲉ ⲟⲣⲁлⲁ, ⲏⲁⲥⲣⲁⲗ ⲉύ ⲃ ⲣⲟⲧ",
		"🕷️🩸Ⲃ ⲧⲃⲟю ⲇⲟⲭⲗⲩю ⲙⲁⲧь ⳅⲁⲥⲩⲏⲩⲗ ⲥⲧⲣⲁⲡⲟⲏ, ⲃ ⲃυⲇⲉ ⲁⲣⲙⲁⲧⲩⲣы",
		"🕷️🩸Ⲉⳝⲁⲱⲩ ⲧⲃⲟю ⲥⲉⲙью ⲥ ⲁⲣⲙⲁⲧⲩⲣы",
		"🕷️🩸Я ⲧⲃⲟю ⲙⲁⲧь ⳅⲁⲥⲧⲁⲃυⲗ ⲡⲟⲇыⲭⲁⲧь ⲃ ⲙⲟυⲭ ⲏⲟⲅⲁⲭ",
		"🕷️🩸Ⲧⲃⲟя ⲙⲁⲧь ⲙⲏⲉ ⲭⲩύ ⲥⲟⲥёⲧ ⲕⲁⲕ ⲱⲗюⲭⲁ",
		"🕷️🩸Я ⲧⲃⲟυ ⲅⲏυюⳃυⲉ ⲕⲟⲥⲧυ ⲣⲉⳅⲁⲗ ⳅⲁⲗⲩⲡⲟύ",
		"🕷️🩸Я ⲧⲃⲟю ⲙⲁⲧь ⲃыⲉⳝⲁⲗ ⲃ ⲉё ⲅⲏυⲗⲟύ ⲁⲏⲁⲗ",
		"🕷️🩸Я ⲧⲃⲟυ ⳅⲩⳝы ⲗⲟⲙⲟⲙ ⲃыⲣⲃⲁⲗ",
		"🕷️🩸Я ⲃ ⲧⲃⲟёⲙ ⳝⲣюⲭⲉ ⲡⲁⲩⲕⲟⲃ ⲣⲁⳅⲃⲟⲯⲩ ⲕⲁⲕ ⳝⲗяⲇⲉύ",
		"🕷️🩸Я ⲧⲃⲟυ ⲅⲩⳝы ⲅⲏⲟⲉⲙ ⳅⲁⲗⲉⲡυⲗ υ ⲭⲩёⲙ ⲡⲣυⳝυⲗ ⲇⲟ ⲕⲣⲟⲃυ",
		"🕷️🩸Ⲏⲁⲥυⲗⲩю ⲧⲃⲟю ⲙⲁⲧь ⲱⲗюⲭⲩ",
		"🕷️🩸Ⲧⲃⲟя ⲥⲉⲙья эⲧⲟ ⲧⲟⲗⲡⲁ ⲉⳝⲩⳡυⲭ υⲙⳝυцυⲗⲟⲃ",
		"🕷️🩸Я ⲧⲃⲟⳝ ⲙⲁⲧь ⳅⲁⲣыⲗ ⲥⲣⲉⲇυ ⲕⲁⲙⲉⲏⲏыⲭ ⲥⲕⲣⲉⲯⲁⲗⲉύ",
		"🕷️🩸Ⲥⲗыⲱυⲱь ⲭⲩⲉⲥⲟⲥ, я ⲧⲃⲟю ⲙⲁⲧь ⲃыⲉⳝⲁⲗ",
		"🕷️🩸Ⲧⲃⲟя ⲙⲁⲧь ⲟⲥⲧⲁⲃυⲗⲁ ⲡⲟⲥⲗⲉ ⲥⲉⳝя ⲏⲉⲥⲕⲟⲗьⲕⲟ ⲕⲁⲡⲉⲗь ⲏⲁ ⲕυⲏⲯⲁⲗⲉ",
		"🕷️🩸Ⲅⲟⲗⲟⲃⲩ ⲧⲃⲟⲉύ ⲙⲁⲧⲉⲣυ ⲩⲣⲟⲏυⲗ ⲏⲁ ⲡυⲕⲩ",
		"🕷️🩸Ⲃ ⲡυⳅⲇⲩ ⲧⲃⲟⲉύ ⲙⲁⲙⲁⲱυ ⲕⲩⲏⲁύ ⲃⲥⲧⲁⲃυⲗ υ ⲡⲣⲟⲕⲣⲩⲧυⲗ",
		"🕷️🩸Ⲡⲁⲩⲕυ ⲟⲥⲕⲃⲉⲣⲏυⲗυ ⲧⲃⲟύ ⲟⳝⲅⲟⲗⲟⲇⲁⲏⲏыύ ⲧⲣⲩⲡ",
		"🕷️🩸Ⲩ ⲧⲉⳝя ⲡⲟⲇ ⲣⲉⳝⲣⲟⲙ ⲙⲟύ ⳡⲗⲉⲏ ⳅⲁⲥⲧⲣяⲗ",
		"🕷️🩸Ⲣⲩⲱⲩ ⲧⲃⲟю ⲙⲁⲧь ⲥⲃⲟυⲙ ⳡⲗⲉⲏⲟⲙ",
		"🕷️🩸Ⲏⲁ ⲕⲟⲥⲧяⲭ ⲧⲃⲟⲉύ ⲙⲁⲧⲉⲣυ я ⲡⲟⲥⲧⲣⲟυⲗ ⲇⲟⲙ ⲇⲗя ⳝⲟⲙⲯⲉύ",
		"🕷️🩸Ⲉⳝⲩ ⲧⲃⲟю ⲱⲗюⲭⲟⲙⲁⲧь ⲃ ⲣⲟⲧ",
		"🕷️🩸Ⲣⲁⳅⲗⲟⲯυⲃⲱⲉⲉⲥя ⲙяⲥⲟ ⲧⲃⲟⲉύ ⲙⲁⲧⲉⲣυ ⲉⳝⲁⲗ ⲏⲁ ⲕⲣыⲱⲕⲉ ⲅⲣⲟⳝⲁ ⲧⲃⲟⲉⲅⲟ ⲟⲧцⲁ",
		"🕷️🩸Ⲣⲉⲯⲩ ⲧⲃⲟю ⲙⲁⲧь ⲗьⲇⲟⲙ",
		"🕷️🩸Ⲙⲁⲧь ⲧⲃⲟю ⳡⲗⲉⲏⲟⲙ ⲇыⲣяⲃυⲗ)",
		"🕷️🩸Ⳡⲗⲉⲏⲟⲙ ⲧⲃⲟя ⲙⲁⲧь ⳡⲉⲕⲁⲗ)",
		"🕷️🩸Ⲙⲁⲧь ⲧⲃⲟю ⲭⲩⲉⲙ ⲃыⲧⲣⲁⲭυⲃⲁⲗ)",
		"🕷️🩸Ⲙⲁⲙⲁⲏю ⲧⲃⲟю ⳅⲁⲗⲩⲡⲟύ ⲇⲣⲁⲗ)",
		"🕷️🩸Ⲙⲁⲧь ⲧⲃⲟя ⳅⲁⲗⲩⲡⲟύ ⲇⲁⲃυⲧьⲥя)",
		"🕷️🩸Ⲥⲁⲥⲉⲧ ⲙⲁⲧь ⲧⲃⲟя, ⲡⲟⲕⲁ ⲧы ⲁⲭⲩⲉⲃⲁⲉⲱь)",
		"🕷️🩸Ⲭⲩёⲙ ⲧⲃⲟю ⲙⲁⲧь υⲙⲉю)",
		"🕷️🩸Ⲧяⲏⲩ ⲧⲃⲟю ⲙⲁⲧь ⲱⲗюⲭⲩ)",
		"🕷️🩸Ⲧⲃⲟя ⲙⲁⲧь ⲏⲁ 5++ ⲥⲟⲥёⲧ)",
		"🕷️🩸Ⲭⲩⲉⲙ ⲧⲃⲟю ⲙⲁⲧь ⲡυⲇⲁⲣⲁⲥυⲗ)",
		"🕷️🩸Ⲙⲁⲙⲁⲱⲩ ⲧⲃⲟю ⲃ ⲣⲟⲧ ⲉⳝⲁⲗ ⲯⲉ)",
		"🕷️🩸Ⲃ ⲁⲏⲁⲗ ⲧⲃⲟⲉύ ⲙⲁⲧⲉⲣυ ⲕⲟⲏⳡυⲗ)",
		"🕷️🩸Ⲧⲃⲟя ⲙⲁⲧь ⲙⲟю ⲥⲡⲉⲣⲙⲩ ⲯⲩёⲧ)",
		"🕷️🩸Ⳡёⲧⲕⲟ ⲧⲃⲟя ⲙⲁⲧь ⲥⲟⲥёⲧ)",
		"🕷️🩸Ⳅⲁⲕⲣыⲗ ⲣⲟⲧ ⲧⲃⲟⲉύ ⲙⲁⲧⲉⲣυ ⲥⲃⲟυⲙ ⳡⲗⲉⲏⲟⲙ)",
		"🕷️🩸Ⲧⲃⲟя ⲙⲁⲧь ⲡⲁⲗυⲣⲩⲉⲧ ⲙⲟю ⳅⲁⲗⲩⲡⲩ)",
		"🕷️🩸Ⲧⲃⲟю ⲙⲁⲧь я ⲥⲃⲟυⲙ ⳡⲗⲉⲏⲟⲙ ⲃъⲉⳝⲁⲱυⲗ ⲃ ⲁⲥⲫⲁⲗьⲧ",
		"🕷️🩸Ⳅⲁⲥⲁⲇυⲗ ⲧⲃⲟⲉύ ⲙⲁⲙⲁⲱⲉ)",
		"🕷️🩸Ⳡⲗⲉⲏⲟⲙ ⲧⲃⲟю ⲙⲁⲧь ⲇⲁⲃυⲗ)",
		"🕷️🩸Ⲏⲟⲅⲁⲙυ ⲧⲃⲟя ⲙⲁⲧь ⲙⲏⲉ ⲇⲣⲟⳡυⲧ)",
		"🕷️🩸Ⲙⲁⲧь ⲧⲃⲟю ⲟⲡⲣⲟⲕυⲏⲩⲗ ⳅⲁⲗⲩⲡⲟύ)",
		"🕷️🩸Ⲥⲁⲯⲁю ⲧⲃⲟю ⲙⲁⲧь ⲏⲁ ⲕⲩⲏⲁύ)",
		"🕷️🩸Ⲟⲧⲕⲣⲟύ ⲣⲟⲧυⲕ, ⲗⲉⲧяⲧ ⳡⲗⲉⲏы ⲡⲁⲩⳡⲕⲟⲃ)"]
		self.db.set(self.strings["name"], "state", True)
		while self.db.get(self.strings["name"], "state"):
			await message.respond(text + random.choice(shabl))
			await sleep(0.1)
			await sleep(time)